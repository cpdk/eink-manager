FROM --platform=$BUILDPLATFORM node:18-slim AS builder

# Install basic build tools
RUN apt-get update && apt-get install -y \
    python3-full \
    build-essential \
    pkg-config \
    git \
    make \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy package files
COPY api/package*.json api/
COPY ui/package*.json ui/

# Build UI first (this can be done on x64)
WORKDIR /app/ui
RUN npm ci
COPY ui/ ./
RUN npm run build

# Switch to ARM64 for API build
FROM --platform=$TARGETPLATFORM node:18-slim AS api-builder

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    libcairo2 \
    libpango1.0-0 \
    libjpeg62-turbo \
    libgif7 \
    librsvg2-2 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app/api

# Copy package files and install dependencies
COPY api/package*.json ./
RUN npm ci --omit=dev

# Copy source and build
COPY api/ ./
RUN npm run build

# Final stage
FROM --platform=$TARGETPLATFORM debian:bookworm-slim

# Create directory structure
WORKDIR /app/release
RUN mkdir -p api/dist ui bin public

# Copy built files from previous stages
COPY --from=builder /app/dist/ui ./ui/
COPY --from=api-builder /app/api/dist ./api/dist/
COPY --from=api-builder /app/api/node_modules ./api/node_modules/
COPY --from=api-builder /app/api/package.json ./api/

# Copy scripts and other files
COPY bin/install.sh ./bin/
COPY bin/start.sh ./bin/
COPY bin/install-deps.sh ./bin/
COPY bin/check-system.sh ./bin/

# Copy public directory if it exists
COPY public/. ./public/ 2>/dev/null || true

# Set execute permissions
RUN chmod +x bin/*

# Create the final tarball
RUN tar czf /app/eink-release-arm64.tar.gz . 