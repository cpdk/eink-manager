name: Build and Release

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get version
        id: package_version
        run: |
          VERSION=$(node -p "require('./api/package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build for Raspberry Pi Zero W
        run: |
          # Create a temporary directory for the build output
          mkdir -p dist
          
          # Build using Docker
          docker buildx build \
            --platform linux/arm/v6 \
            --file Dockerfile.armv6 \
            --output type=tar,dest=dist/build.tar \
            .
          
          # Extract the build output
          cd dist
          tar xf build.tar
          rm build.tar
          
          # Create the final release package
          tar czf eink-release-armv6l.tar.gz app/eink-release-armv6l.tar.gz
          cd ..

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/eink-release-armv6l.tar.gz
          name: Release v${{ steps.package_version.outputs.version }}
          tag_name: v${{ steps.package_version.outputs.version }}
          body: |
            E-ink Display Service Release v${{ steps.package_version.outputs.version }}
            
            ### Installation
            ```bash
            # Download and extract
            wget https://github.com/${{ github.repository }}/releases/download/v${{ steps.package_version.outputs.version }}/eink-release-armv6l.tar.gz
            tar xzf eink-release-armv6l.tar.gz
            
            # Install
            sudo bash bin/install.sh
            ```
          draft: false
          prerelease: false 